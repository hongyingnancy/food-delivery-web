{"ast":null,"code":"var _jsxFileName = \"/Users/kingwang/myProject/11food-order/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport sushi from \"../../assets/meals.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"Finest fish and veggies\",\n  price: 22.99,\n  type: \"Japanese\",\n  picture: sushi\n}, {\n  id: \"m2\",\n  name: \"General Tso’s Chicken \",\n  description: \"it’s crisp on the outside, juicy on the inside, and flavorful all over. The sweet and spicy sauce takes it over the top! \",\n  price: 16.5,\n  type: \"Korean\",\n  picture: chicken\n}, {\n  id: \"m3\",\n  name: \"Thai Noodle Salad\",\n  description: \"Combination of rice noodles, crisp veggies, and an insanely delicious peanut sauce\",\n  price: 12.99,\n  type: \"Tailand\",\n  picture: TaiNoodle\n}, {\n  id: \"m4\",\n  name: \"Wonton Soup \",\n  description: \"Wontons are a type of Chinese dumpling. They’re made with ground meat wrapped in a dumpling wrapper and steamed until cooked and tender.\",\n  price: 18.99,\n  type: \"Chinese\",\n  picture: \"/meals.jpg\"\n}, {\n  id: \"m5\",\n  name: \"Dandan Noodle\",\n  description: \"Dan dan noodles is popular in China becasue of the spicy sauce made from chili oil, scallions, and Sichuan pepper. There are four different elements to this dish – the meat, the pickled veggies, the sauce, and the chili oil \",\n  price: 18.99,\n  type: \"Chinese\",\n  picture: Dandan\n}, {\n  id: \"m6\",\n  name: \"chikin\",\n  description: \"Sticky, spicy Korean chicken wings coated with the addictive Korean red pepper paste, or gochujang.\",\n  price: 18.99,\n  type: \"Japanese\",\n  picture: \"/meals.jpg\"\n}, {\n  id: \"m7\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99,\n  type: \"Japanese\",\n  picture: \"/meals.jpg\"\n}, {\n  id: \"m8\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99,\n  type: \"Japanese\",\n  picture: \"/meals.jpg\"\n}, {\n  id: \"m9\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99,\n  type: \"Japanese\",\n  picture: \"/meals.jpg\"\n}, {\n  id: \"m10\",\n  name: \"Green Bowl\",\n  description: \"Healthy...and green...\",\n  price: 18.99,\n  type: \"Japanese\",\n  picture: \"/meals.jpg\"\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  let mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price,\n    picture: meal.picture\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this));\n  const [changedMeal, setMeal] = useState(mealsList);\n\n  const handleAll = () => {\n    setMeal(mealsList);\n  };\n\n  const handleChi = () => {\n    HandleSelection(\"Chinese\");\n  };\n\n  const handleJap = () => {\n    HandleSelection(\"Japanese\");\n  };\n\n  function handleTai() {\n    HandleSelection(\"Tailand\");\n  }\n\n  useEffect(() => {}, [changedMeal]);\n\n  function HandleSelection(country) {\n    let temp = DUMMY_MEALS.filter(meal => meal.type === country);\n    temp = temp.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      description: meal.description,\n      price: meal.price,\n      picture: meal.picture\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }, this));\n    setMeal(temp);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-button-ghost-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"ghost\",\n        danger: true,\n        ghost: true,\n        onClick: handleAll,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleJap,\n        children: \"Japanese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleChi,\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleTai,\n        children: \"Tailand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: changedMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"SHFj9vgZOWKzdZAYrIpa6byqglg=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/kingwang/myProject/11food-order/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","Button","useEffect","useState","sushi","DUMMY_MEALS","id","name","description","price","type","picture","chicken","TaiNoodle","Dandan","AvailableMeals","mealsList","map","meal","changedMeal","setMeal","handleAll","handleChi","HandleSelection","handleJap","handleTai","country","temp","filter","meals"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,WAAW,EAAE,yBAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAEP;AANX,CADkB,EASlB;AACEE,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,wBAFR;AAGEC,EAAAA,WAAW,EAAE,2HAHf;AAIEC,EAAAA,KAAK,EAAE,IAJT;AAKEC,EAAAA,IAAI,EAAE,QALR;AAMEC,EAAAA,OAAO,EAAEC;AANX,CATkB,EAiBlB;AACEN,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,mBAFR;AAGEC,EAAAA,WAAW,EAAE,oFAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,SALR;AAMEC,EAAAA,OAAO,EAAEE;AANX,CAjBkB,EAyBlB;AACEP,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,WAAW,EAAE,0IAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,SALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAzBkB,EAiClB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,WAAW,EAAE,kOAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,SALR;AAMEC,EAAAA,OAAO,EAAEG;AANX,CAjCkB,EAyClB;AACER,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,WAAW,EAAE,qGAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAzCkB,EAiDlB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAjDkB,EAyDlB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAzDkB,EAiElB;AACEL,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAjEkB,EAyElB;AACEL,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,WAAW,EAAE,wBAHf;AAIEC,EAAAA,KAAK,EAAE,KAJT;AAKEC,EAAAA,IAAI,EAAE,UALR;AAMEC,EAAAA,OAAO,EAAE;AANX,CAzEkB,CAApB;;AAsFA,MAAMI,cAAc,GAAG,MAAM;AAAA;;AAE3B,MAAIC,SAAS,GAAGX,WAAW,CAACY,GAAZ,CAAiBC,IAAD,iBAC9B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACZ,EAFX;AAGE,IAAA,IAAI,EAAEY,IAAI,CAACX,IAHb;AAIE,IAAA,WAAW,EAAEW,IAAI,CAACV,WAJpB;AAKE,IAAA,KAAK,EAAEU,IAAI,CAACT,KALd;AAME,IAAA,OAAO,EAAGS,IAAI,CAACP;AANjB,KACOO,IAAI,CAACZ,EADZ;AAAA;AAAA;AAAA;AAAA,UADc,CAAhB;AAUA,QAAM,CAACa,WAAD,EAAcC,OAAd,IAAyBjB,QAAQ,CAACa,SAAD,CAAvC;;AACA,QAAMK,SAAS,GAAC,MAAI;AAClBD,IAAAA,OAAO,CAACJ,SAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,SAAS,GAAC,MAAI;AAClBC,IAAAA,eAAe,CAAC,SAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAC,MAAI;AAClBD,IAAAA,eAAe,CAAC,UAAD,CAAf;AACD,GAFD;;AAIA,WAASE,SAAT,GAAqB;AACnBF,IAAAA,eAAe,CAAC,SAAD,CAAf;AACD;;AAEDrB,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACiB,WAAD,CADM,CAAT;;AAGA,WAASI,eAAT,CAAyBG,OAAzB,EAAiC;AAC/B,QAAIC,IAAI,GAAGtB,WAAW,CAACuB,MAAZ,CAAmBV,IAAI,IAChCA,IAAI,CAACR,IAAL,KAAcgB,OADL,CAAX;AAGDC,IAAAA,IAAI,GAAGA,IAAI,CAACV,GAAL,CAAUC,IAAI,iBACnB,QAAC,QAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACZ,EAFX;AAGE,MAAA,IAAI,EAAEY,IAAI,CAACX,IAHb;AAIE,MAAA,WAAW,EAAEW,IAAI,CAACV,WAJpB;AAKE,MAAA,KAAK,EAAEU,IAAI,CAACT,KALd;AAME,MAAA,OAAO,EAAGS,IAAI,CAACP;AANjB,OACOO,IAAI,CAACZ,EADZ;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAUAc,IAAAA,OAAO,CAACO,IAAD,CAAP;AAEA;;AAED,sBAEE;AAAS,IAAA,SAAS,EAAE3B,OAAO,CAAC6B,KAA5B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,MAAM,MAA3B;AAA4B,QAAA,KAAK,MAAjC;AAAkC,QAAA,OAAO,EAAER,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,MAAM,MAA7B;AAA8B,QAAA,KAAK,MAAnC;AAAoC,QAAA,OAAO,EAAEG,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,MAAM,MAA7B;AAA8B,QAAA,KAAK,MAAnC;AAAoC,QAAA,OAAO,EAAEF,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,MAAM,MAA7B;AAA8B,QAAA,KAAK,MAAnC;AAAoC,QAAA,OAAO,EAAEG,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAgBE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAuBD,CAzED;;GAAMJ,c;;KAAAA,c;AA2EN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport sushi from \"../../assets/meals.jpg\";\n\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n    type: \"Japanese\",\n    picture: sushi\n  },\n  {\n    id: \"m2\",\n    name: \"General Tso’s Chicken \",\n    description: \"it’s crisp on the outside, juicy on the inside, and flavorful all over. The sweet and spicy sauce takes it over the top! \",\n    price: 16.5,\n    type: \"Korean\",\n    picture: chicken\n  },\n  {\n    id: \"m3\",\n    name: \"Thai Noodle Salad\",\n    description: \"Combination of rice noodles, crisp veggies, and an insanely delicious peanut sauce\",\n    price: 12.99,\n    type: \"Tailand\",\n    picture: TaiNoodle\n  },\n  {\n    id: \"m4\",\n    name: \"Wonton Soup \",\n    description: \"Wontons are a type of Chinese dumpling. They’re made with ground meat wrapped in a dumpling wrapper and steamed until cooked and tender.\",\n    price: 18.99,\n    type: \"Chinese\",\n    picture: \"/meals.jpg\"\n  },\n  {\n    id: \"m5\",\n    name: \"Dandan Noodle\",\n    description: \"Dan dan noodles is popular in China becasue of the spicy sauce made from chili oil, scallions, and Sichuan pepper. There are four different elements to this dish – the meat, the pickled veggies, the sauce, and the chili oil \",\n    price: 18.99,\n    type: \"Chinese\",\n    picture: Dandan\n  },\n  {\n    id: \"m6\",\n    name: \"chikin\",\n    description: \"Sticky, spicy Korean chicken wings coated with the addictive Korean red pepper paste, or gochujang.\",\n    price: 18.99,\n    type: \"Japanese\",\n    picture: \"/meals.jpg\"\n  },\n  {\n    id: \"m7\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n    type: \"Japanese\",\n    picture: \"/meals.jpg\"\n  },\n  {\n    id: \"m8\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n    type: \"Japanese\",\n    picture: \"/meals.jpg\"\n  },\n  {\n    id: \"m9\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n    type: \"Japanese\",\n    picture: \"/meals.jpg\"\n  },\n  {\n    id: \"m10\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n    type: \"Japanese\",\n    picture: \"/meals.jpg\"\n  },\n];\n\n\n\n\nconst AvailableMeals = () => {\n\n  let mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n      picture ={meal.picture}\n    />\n  ));\n  const [changedMeal, setMeal] = useState(mealsList);\n  const handleAll=()=>{\n    setMeal(mealsList)\n  }\n  \n  const handleChi=()=>{\n    HandleSelection(\"Chinese\")\n  }\n  \n  const handleJap=()=>{\n    HandleSelection(\"Japanese\")\n  }\n  \n  function handleTai() {\n    HandleSelection(\"Tailand\")\n  }\n  \n  useEffect(() => {\n  }, [changedMeal]);\n\n  function HandleSelection(country){\n    let temp = DUMMY_MEALS.filter(meal => \n      meal.type === country \n   );\n   temp = temp.map( meal =>\n     <MealItem\n       key={meal.id}\n       id={meal.id}\n       name={meal.name}\n       description={meal.description}\n       price={meal.price}\n       picture ={meal.picture}\n     />\n   )\n   setMeal(temp)\n\n  }\n\n  return (\n    \n    <section className={classes.meals}>\n      <div className=\"site-button-ghost-wrapper\">\n        <Button type=\"ghost\" danger ghost onClick={handleAll}>\n          All\n        </Button>\n        <Button type=\"primary\" danger ghost onClick={handleJap}>\n          Japanese\n        </Button>\n        <Button type=\"primary\" danger ghost onClick={handleChi}>\n          Chinese\n        </Button>\n        <Button type=\"primary\" danger ghost onClick={handleTai}>\n          Tailand\n        </Button>\n      </div>\n      ,\n      <Card>\n        <ul>{changedMeal}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}