{"ast":null,"code":"var _jsxFileName = \"/Users/kingwang/myProject/11food-order/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport sushi from \"../../assets/Sushi.jpeg\";\nimport TaiNoodle from \"../../assets/Unagi.jpeg\";\nimport Wanton from \"../../assets/Wanton.jpeg\";\nimport Dandan from \"../../assets/Dandan.jpeg\";\nimport Beef from \"../../assets/beef.jpeg\";\nimport Sashimi from \"../../assets/Sashimi.jpeg\";\nimport Bibimbap from \"../../assets/Bibimbap.jpeg\";\nimport Okonomiyaki from \"../../assets/Okonomiyaki.jpeg\";\nimport tteokbokki from \"../../assets/tteokbokki.jpeg\";\nimport TomKhaGa from \"../../assets/TomKhaGa.jpeg\";\nimport Takoyaki from \"../../assets/Takoyaki.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: \"m1\",\n  name: \"Sushi\",\n  description: \"A staple rice dish of Japanese cuisine, consisting of cooked rice flavoured with vinegar and a variety of vegetable, egg, or raw seafood garnishes and served cold.\",\n  price: 22.99,\n  type: \"Japanese\",\n  picture: sushi\n}, {\n  id: \"m2\",\n  name: \"Tom Kha Ga\",\n  description: \"Tom kha gai is unique in that it typically comes with lots of creamy coconut milk creating a rich sweet soup. Like most Thai foods, vegetarian options are easily adaptable by substituting a few ingredients.\",\n  price: 16.5,\n  type: \"Tailand\",\n  picture: TomKhaGa\n}, {\n  id: \"m4\",\n  name: \"Wonton Soup \",\n  description: \"Wontons are a type of Chinese dumpling. They’re made with ground meat wrapped in a dumpling wrapper and steamed until cooked and tender.\",\n  price: 17.9,\n  type: \"Chinese\",\n  picture: Wanton\n}, {\n  id: \"m7\",\n  name: \"Sashimi\",\n  description: \"Sashimi is raw fish or meat that has been expertly cut into thin slices and typically comes served with daikon radish, pickled ginger, wasabi and soy sauce.\",\n  price: 16.8,\n  type: \"Japanese\",\n  picture: Sashimi\n}, {\n  id: \"m8\",\n  name: \"Bibimbap\",\n  description: \"Warm rice topped with mixed vegetables, beef or chicken, and raw egg, as well as soy sauce and a dollop of chilli pepper paste for seasoning. Ideal for seafood lovers\",\n  price: 17.5,\n  type: \"Korean\",\n  picture: Bibimbap\n}, {\n  id: \"m9\",\n  name: \"Okonomiyaki\",\n  description: \"Okonomiyaki is made by mixing together batter, sliced cabbage, and other savoury ingredients; spooning the mixture onto a hot plate; and then pan-frying as you would a pancake.\",\n  price: 13.99,\n  type: \"Japanese\",\n  picture: Okonomiyaki\n}, {\n  id: \"m5\",\n  name: \"Dandan Noodle\",\n  description: \"Dan dan noodles is popular in China becasue of the spicy sauce made from chili oil, scallions, and Sichuan pepper. There are four different elements to this dish – the meat, the pickled veggies, the sauce, and the chili oil \",\n  price: 13.89,\n  type: \"Chinese\",\n  picture: Dandan\n}, {\n  id: \"m10\",\n  name: \"Tteokbokki\",\n  description: \"Traditional Korean street food that’s made with thick slices of garaetteok (boiled rice cake), fish cake, onions, diced garlic, salt, sugar and assorted vegetables that are stir-fried in sweet red chili sauce.\",\n  price: 15.7,\n  type: \"Korean\",\n  picture: tteokbokki\n}, {\n  id: \"m3\",\n  name: \"Unagi no Kabayaki\",\n  description: \"Unagi no kabayaki is made by brushing prepared eel fillets with a sweetened soy sauce-based kabayaki sauce and broiling them on a grill.\",\n  price: 12.99,\n  type: \"Japanese\",\n  picture: TaiNoodle\n}, {\n  id: \"m6\",\n  name: \"Beef and Broccoli\",\n  description: \"This Chinese staple features tender, juicy beef and crunchy broccoli! Oh, and it has this drool-worthy sauce, too.\",\n  price: 12.3,\n  type: \"Chinese\",\n  picture: Beef\n}, {\n  id: \"m11\",\n  name: \"Takoyaki\",\n  description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n  price: 12.3,\n  type: \"Japanese\",\n  picture: Takoyaki\n}, {\n  id: \"m12\",\n  name: \"Tom Yum Goong\",\n  description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n  price: 12.3,\n  type: \"Tailand\",\n  picture: Takoyaki\n}, {\n  id: \"m12\",\n  name: \"Tom Yum Goong\",\n  description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n  price: 12.3,\n  type: \"Japanese\",\n  picture: Takoyaki\n}, {\n  id: \"m12\",\n  name: \"Tom Yum Goong\",\n  description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n  price: 12.3,\n  type: \"Japanese\",\n  picture: Takoyaki\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  let mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price,\n    picture: meal.picture\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this));\n  const [changedMeal, setMeal] = useState(mealsList);\n\n  const handleAll = () => {\n    setMeal(mealsList);\n  };\n\n  const handleChi = () => {\n    HandleSelection(\"Chinese\");\n  };\n\n  const handleJap = () => {\n    HandleSelection(\"Japanese\");\n  };\n\n  function handleTai() {\n    HandleSelection(\"Tailand\");\n  }\n\n  function handleKor() {\n    HandleSelection(\"Korean\");\n  }\n\n  useEffect(() => {}, [changedMeal]);\n\n  function HandleSelection(country) {\n    let temp = DUMMY_MEALS.filter(meal => meal.type === country);\n    temp = temp.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      description: meal.description,\n      price: meal.price,\n      picture: meal.picture\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }, this));\n    setMeal(temp);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-button-ghost-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"ghost\",\n        danger: true,\n        ghost: true,\n        onClick: handleAll,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleJap,\n        children: \"Japanese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleChi,\n        children: \"Chinese\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleTai,\n        children: \"Tailand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        danger: true,\n        ghost: true,\n        onClick: handleKor,\n        children: \"Korean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: changedMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"SHFj9vgZOWKzdZAYrIpa6byqglg=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/kingwang/myProject/11food-order/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","Button","useEffect","useState","sushi","TaiNoodle","Wanton","Dandan","Beef","Sashimi","Bibimbap","Okonomiyaki","tteokbokki","TomKhaGa","Takoyaki","DUMMY_MEALS","id","name","description","price","type","picture","AvailableMeals","mealsList","map","meal","changedMeal","setMeal","handleAll","handleChi","HandleSelection","handleJap","handleTai","handleKor","country","temp","filter","meals"],"mappings":"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","sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport sushi from \"../../assets/Sushi.jpeg\";\nimport TaiNoodle from \"../../assets/Unagi.jpeg\"\nimport Wanton from \"../../assets/Wanton.jpeg\"\nimport Dandan from \"../../assets/Dandan.jpeg\"\nimport Beef from \"../../assets/beef.jpeg\"\nimport Sashimi from \"../../assets/Sashimi.jpeg\"\nimport Bibimbap from \"../../assets/Bibimbap.jpeg\"\nimport Okonomiyaki from \"../../assets/Okonomiyaki.jpeg\"\nimport tteokbokki from \"../../assets/tteokbokki.jpeg\"\nimport TomKhaGa from \"../../assets/TomKhaGa.jpeg\"\nimport Takoyaki from \"../../assets/Takoyaki.jpeg\"\n\n\n\n\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"A staple rice dish of Japanese cuisine, consisting of cooked rice flavoured with vinegar and a variety of vegetable, egg, or raw seafood garnishes and served cold.\",\n    price: 22.99,\n    type: \"Japanese\",\n    picture: sushi\n  },\n  {\n    id: \"m2\",\n    name: \"Tom Kha Ga\",\n    description: \"Tom kha gai is unique in that it typically comes with lots of creamy coconut milk creating a rich sweet soup. Like most Thai foods, vegetarian options are easily adaptable by substituting a few ingredients.\",\n    price: 16.5,\n    type: \"Tailand\",\n    picture: TomKhaGa\n  },\n  \n  {\n    id: \"m4\",\n    name: \"Wonton Soup \",\n    description: \"Wontons are a type of Chinese dumpling. They’re made with ground meat wrapped in a dumpling wrapper and steamed until cooked and tender.\",\n    price: 17.9,\n    type: \"Chinese\",\n    picture: Wanton\n  },\n  {\n    id: \"m7\",\n    name: \"Sashimi\",\n    description: \"Sashimi is raw fish or meat that has been expertly cut into thin slices and typically comes served with daikon radish, pickled ginger, wasabi and soy sauce.\",\n    price: 16.8,\n    type: \"Japanese\",\n    picture: Sashimi\n  },\n  {\n    id: \"m8\",\n    name: \"Bibimbap\",\n    description: \"Warm rice topped with mixed vegetables, beef or chicken, and raw egg, as well as soy sauce and a dollop of chilli pepper paste for seasoning. Ideal for seafood lovers\",\n    price: 17.5,\n    type: \"Korean\",\n    picture: Bibimbap\n  },\n  {\n    id: \"m9\",\n    name: \"Okonomiyaki\",\n    description: \"Okonomiyaki is made by mixing together batter, sliced cabbage, and other savoury ingredients; spooning the mixture onto a hot plate; and then pan-frying as you would a pancake.\",\n    price: 13.99,\n    type: \"Japanese\",\n    picture: Okonomiyaki\n  },\n  {\n    id: \"m5\",\n    name: \"Dandan Noodle\",\n    description: \"Dan dan noodles is popular in China becasue of the spicy sauce made from chili oil, scallions, and Sichuan pepper. There are four different elements to this dish – the meat, the pickled veggies, the sauce, and the chili oil \",\n    price: 13.89,\n    type: \"Chinese\",\n    picture: Dandan\n  },\n  {\n    id: \"m10\",\n    name: \"Tteokbokki\",\n    description: \"Traditional Korean street food that’s made with thick slices of garaetteok (boiled rice cake), fish cake, onions, diced garlic, salt, sugar and assorted vegetables that are stir-fried in sweet red chili sauce.\",\n    price: 15.7,\n    type: \"Korean\",\n    picture: tteokbokki\n  },\n  {\n    id: \"m3\",\n    name: \"Unagi no Kabayaki\",\n    description: \"Unagi no kabayaki is made by brushing prepared eel fillets with a sweetened soy sauce-based kabayaki sauce and broiling them on a grill.\",\n    price: 12.99,\n    type: \"Japanese\",\n    picture: TaiNoodle\n  },\n  \n  {\n    id: \"m6\",\n    name: \"Beef and Broccoli\",\n    description: \"This Chinese staple features tender, juicy beef and crunchy broccoli! Oh, and it has this drool-worthy sauce, too.\",\n    price: 12.3,\n    type: \"Chinese\",\n    picture: Beef\n  },\n  {\n    id: \"m11\",\n    name: \"Takoyaki\",\n    description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n    price: 12.3,\n    type: \"Japanese\",\n    picture: Takoyaki\n  },\n  {\n    id: \"m12\",\n    name: \"Tom Yum Goong\",\n    description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n    price: 12.3,\n    type: \"Tailand\",\n    picture: Takoyaki\n  },\n  {\n    id: \"m12\",\n    name: \"Tom Yum Goong\",\n    description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n    price: 12.3,\n    type: \"Japanese\",\n    picture: Takoyaki\n  },\n  {\n    id: \"m12\",\n    name: \"Tom Yum Goong\",\n    description: \"his delicacy is cooked using a special hot plate with rows of half-spherical moulds. Each of the moulds is filled with a savoury batter mixture before a bite-size piece of tako octopus meat is inserted into the middle.\",\n    price: 12.3,\n    type: \"Japanese\",\n    picture: Takoyaki\n  },\n\n];\n\n\n\n\nconst AvailableMeals = () => {\n\n  let mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n      picture ={meal.picture}\n    />\n  ));\n  const [changedMeal, setMeal] = useState(mealsList);\n  const handleAll=()=>{\n    setMeal(mealsList)\n  }\n  \n  const handleChi=()=>{\n    HandleSelection(\"Chinese\")\n  }\n  \n  const handleJap=()=>{\n    HandleSelection(\"Japanese\")\n  }\n  \n  function handleTai() {\n    HandleSelection(\"Tailand\")\n  }\n  function handleKor(){\n    HandleSelection(\"Korean\")\n  }\n  \n  useEffect(() => {\n  }, [changedMeal]);\n\n  function HandleSelection(country){\n    let temp = DUMMY_MEALS.filter(meal => \n      meal.type === country \n   );\n   temp = temp.map( meal =>\n     <MealItem\n       key={meal.id}\n       id={meal.id}\n       name={meal.name}\n       description={meal.description}\n       price={meal.price}\n       picture ={meal.picture}\n     />\n   )\n   setMeal(temp)\n\n  }\n\n  return (\n    \n    <section className={classes.meals}>\n      <div className=\"site-button-ghost-wrapper\">\n        <Button type=\"ghost\" danger ghost onClick={handleAll} >\n          All\n        </Button>&nbsp;&nbsp;&nbsp;\n        <Button type=\"primary\" danger ghost onClick={handleJap}>\n          Japanese\n        </Button>&nbsp;&nbsp;&nbsp;\n        <Button type=\"primary\" danger ghost onClick={handleChi}>\n          Chinese\n        </Button>&nbsp;&nbsp;&nbsp;\n        <Button type=\"primary\" danger ghost onClick={handleTai}>\n          Tailand\n        </Button>&nbsp;&nbsp;&nbsp;\n        <Button type=\"primary\" danger ghost onClick={handleKor}>\n          Korean\n        </Button>&nbsp;&nbsp;&nbsp;\n      </div>\n      ,\n      <Card>\n        <ul>{changedMeal}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}